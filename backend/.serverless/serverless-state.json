{
  "service": {
    "service": "aaaAcademy",
    "serviceObject": {
      "name": "aaaAcademy"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs18.x",
      "profile": "serverlessUser",
      "region": "eu-north-1",
      "iam": {
        "role": "arn:aws:iam::990371472798:role/course-role"
      },
      "stage": "dev",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "GetAllSessionsLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/aaaAcademy-dev-getAllSessions"
            }
          },
          "BookSessionLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/aaaAcademy-dev-bookSession"
            }
          },
          "DeleteSessionLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/aaaAcademy-dev-deleteSession"
            }
          },
          "GetMySessionLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/aaaAcademy-dev-getMySession"
            }
          },
          "EditMySessionLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/aaaAcademy-dev-editMySession"
            }
          },
          "SignupLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/aaaAcademy-dev-signup"
            }
          },
          "LoginLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/aaaAcademy-dev-login"
            }
          },
          "ChangePasswordLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/aaaAcademy-dev-changePassword"
            }
          },
          "ChangeInfoLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/aaaAcademy-dev-changeInfo"
            }
          },
          "GetAllSessionsLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/aaaAcademy/dev/1709475647006-2024-03-03T14:20:47.006Z/getAllSessions.zip"
              },
              "Handler": "functions/Session/getAllSessions.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "aaaAcademy-dev-getAllSessions",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": "arn:aws:iam::990371472798:role/course-role"
            },
            "DependsOn": [
              "GetAllSessionsLogGroup"
            ]
          },
          "BookSessionLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/aaaAcademy/dev/1709475647006-2024-03-03T14:20:47.006Z/bookSession.zip"
              },
              "Handler": "functions/Session/bookSession.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "aaaAcademy-dev-bookSession",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": "arn:aws:iam::990371472798:role/course-role"
            },
            "DependsOn": [
              "BookSessionLogGroup"
            ]
          },
          "DeleteSessionLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/aaaAcademy/dev/1709475647006-2024-03-03T14:20:47.006Z/deleteSession.zip"
              },
              "Handler": "functions/Session/deleteSession.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "aaaAcademy-dev-deleteSession",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": "arn:aws:iam::990371472798:role/course-role"
            },
            "DependsOn": [
              "DeleteSessionLogGroup"
            ]
          },
          "GetMySessionLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/aaaAcademy/dev/1709475647006-2024-03-03T14:20:47.006Z/getMySession.zip"
              },
              "Handler": "functions/Session/getMySession.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "aaaAcademy-dev-getMySession",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": "arn:aws:iam::990371472798:role/course-role"
            },
            "DependsOn": [
              "GetMySessionLogGroup"
            ]
          },
          "EditMySessionLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/aaaAcademy/dev/1709475647006-2024-03-03T14:20:47.006Z/editMySession.zip"
              },
              "Handler": "functions/Session/editMySession.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "aaaAcademy-dev-editMySession",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": "arn:aws:iam::990371472798:role/course-role"
            },
            "DependsOn": [
              "EditMySessionLogGroup"
            ]
          },
          "SignupLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/aaaAcademy/dev/1709475647006-2024-03-03T14:20:47.006Z/signup.zip"
              },
              "Handler": "functions/User/signup.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "aaaAcademy-dev-signup",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": "arn:aws:iam::990371472798:role/course-role"
            },
            "DependsOn": [
              "SignupLogGroup"
            ]
          },
          "LoginLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/aaaAcademy/dev/1709475647006-2024-03-03T14:20:47.006Z/login.zip"
              },
              "Handler": "functions/User/login.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "aaaAcademy-dev-login",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": "arn:aws:iam::990371472798:role/course-role"
            },
            "DependsOn": [
              "LoginLogGroup"
            ]
          },
          "ChangePasswordLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/aaaAcademy/dev/1709475647006-2024-03-03T14:20:47.006Z/changePassword.zip"
              },
              "Handler": "functions/User/changePass.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "aaaAcademy-dev-changePassword",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": "arn:aws:iam::990371472798:role/course-role"
            },
            "DependsOn": [
              "ChangePasswordLogGroup"
            ]
          },
          "ChangeInfoLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/aaaAcademy/dev/1709475647006-2024-03-03T14:20:47.006Z/changeInfo.zip"
              },
              "Handler": "functions/User/changeInfo.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "aaaAcademy-dev-changeInfo",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": "arn:aws:iam::990371472798:role/course-role"
            },
            "DependsOn": [
              "ChangeInfoLogGroup"
            ]
          },
          "BookSessionLambdaVersionff2kEnS3f3I6h5NW8piopX0Mk8hZ5uxJuhpCQbZpwc": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "BookSessionLambdaFunction"
              },
              "CodeSha256": "GZl3DFIe59bI4385h7m76ezJtXYbb9deYem2qMwbrYY="
            }
          },
          "GetAllSessionsLambdaVersion5s8GOemxBYTQBOKa5xtbQkozlVWG9pzxYAAj38cbo": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetAllSessionsLambdaFunction"
              },
              "CodeSha256": "r84fkbUKLuRdW1KhlHLKWd98txZdWWkAXXhY7zcKeJs="
            }
          },
          "DeleteSessionLambdaVersionF8t4xNi61WETKM2feKKLsPorVPOBXCULjrRP3aZwO0": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "DeleteSessionLambdaFunction"
              },
              "CodeSha256": "VB2Fbm+eAd7yO+YOVeTkkuyISEhptrPfufsNjd/1PmE="
            }
          },
          "GetMySessionLambdaVersionXa9WCFuvOFCrDlAl7tFJeLCIbszFnjUvQji1UqLCiwM": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetMySessionLambdaFunction"
              },
              "CodeSha256": "SOpKJ9HdC4ZcCU+WKsE468gH9U3XKkPqlHu1pAwkaJo="
            }
          },
          "EditMySessionLambdaVersionmNZetSTT3j9AZB3nHCOwydbcwqyhJZ6OtfPgftK6E": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "EditMySessionLambdaFunction"
              },
              "CodeSha256": "H6aF9t6iTP8teG9si+CAIk1FMM97UqWZz0WEbE/ifr4="
            }
          },
          "ChangeInfoLambdaVersionfQOrpaFzT7MDhelGx5nDM2BDPGU96eVYUi1pTwLn8": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ChangeInfoLambdaFunction"
              },
              "CodeSha256": "BY68425ZYUuR/o5iHIQQbYcLO+1v64uV549ulrXumuE="
            }
          },
          "SignupLambdaVersionleODRzQzVFyZ2VWwzFR6fmcP3ELrgWzKFI7Ce8EhdA": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SignupLambdaFunction"
              },
              "CodeSha256": "68C8EqvJCFPWOIh8Sma7JrTrK0+rEDrh7YNKy/U8V+w="
            }
          },
          "LoginLambdaVersionYAa6xAZ3kxjSthpADbsqAdhUWfM7695dusbVOcPnM": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "LoginLambdaFunction"
              },
              "CodeSha256": "56fbqnXr8Qz1HtYkl0TaW1DN18d7oI4ofi6/HdzxSxM="
            }
          },
          "ChangePasswordLambdaVersionf5gWNbcxRSsiLvjnHjvmLDvKDjWFzCPZdX7HweqQ": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ChangePasswordLambdaFunction"
              },
              "CodeSha256": "08ndXGIllFvJvQPeyIorQSpgcy3qDkyL62EnRc6iogI="
            }
          },
          "HttpApi": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
              "Name": "dev-aaaAcademy",
              "ProtocolType": "HTTP"
            }
          },
          "HttpApiStage": {
            "Type": "AWS::ApiGatewayV2::Stage",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "StageName": "$default",
              "AutoDeploy": true,
              "DefaultRouteSettings": {
                "DetailedMetricsEnabled": false
              }
            }
          },
          "GetAllSessionsLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetAllSessionsLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationGetAllSessions": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetAllSessionsLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetApiSession": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /api/session",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationGetAllSessions"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationGetAllSessions"
          },
          "BookSessionLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "BookSessionLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationBookSession": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"BookSessionLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostApiSession": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /api/session",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationBookSession"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationBookSession"
          },
          "DeleteSessionLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "DeleteSessionLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationDeleteSession": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"DeleteSessionLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteDeleteApiSessionSessionidVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "DELETE /api/session/{sessionID}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationDeleteSession"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationDeleteSession"
          },
          "GetMySessionLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetMySessionLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationGetMySession": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetMySessionLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetApiSessionSessionidVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /api/session/{sessionID}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationGetMySession"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationGetMySession"
          },
          "EditMySessionLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "EditMySessionLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationEditMySession": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"EditMySessionLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostApiSessionSessionidVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /api/session/{sessionID}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationEditMySession"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationEditMySession"
          },
          "SignupLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "SignupLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationSignup": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"SignupLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostApiAuthSignup": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /api/auth/signup",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationSignup"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationSignup"
          },
          "LoginLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "LoginLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationLogin": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"LoginLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostApiAuthLogin": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /api/auth/login",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationLogin"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationLogin"
          },
          "ChangePasswordLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ChangePasswordLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationChangePassword": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ChangePasswordLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostApiAuthChangepassword": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /api/auth/changePassword",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationChangePassword"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationChangePassword"
          },
          "ChangeInfoLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ChangeInfoLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationChangeInfo": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ChangeInfoLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostApiAuthChangeinfo": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /api/auth/changeInfo",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationChangeInfo"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationChangeInfo"
          },
          "quiztopiaDB": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "bookingDB",
              "AttributeDefinitions": [
                {
                  "AttributeName": "sessionID",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "sessionID",
                  "KeyType": "HASH"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          },
          "userDB": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "academyUserDB",
              "AttributeDefinitions": [
                {
                  "AttributeName": "PK",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "PK",
                  "KeyType": "HASH"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-aaaAcademy-dev-ServerlessDeploymentBucketName"
            }
          },
          "BookSessionLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "BookSessionLambdaVersionff2kEnS3f3I6h5NW8piopX0Mk8hZ5uxJuhpCQbZpwc"
            },
            "Export": {
              "Name": "sls-aaaAcademy-dev-BookSessionLambdaFunctionQualifiedArn"
            }
          },
          "GetAllSessionsLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetAllSessionsLambdaVersion5s8GOemxBYTQBOKa5xtbQkozlVWG9pzxYAAj38cbo"
            },
            "Export": {
              "Name": "sls-aaaAcademy-dev-GetAllSessionsLambdaFunctionQualifiedArn"
            }
          },
          "DeleteSessionLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "DeleteSessionLambdaVersionF8t4xNi61WETKM2feKKLsPorVPOBXCULjrRP3aZwO0"
            },
            "Export": {
              "Name": "sls-aaaAcademy-dev-DeleteSessionLambdaFunctionQualifiedArn"
            }
          },
          "GetMySessionLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetMySessionLambdaVersionXa9WCFuvOFCrDlAl7tFJeLCIbszFnjUvQji1UqLCiwM"
            },
            "Export": {
              "Name": "sls-aaaAcademy-dev-GetMySessionLambdaFunctionQualifiedArn"
            }
          },
          "EditMySessionLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "EditMySessionLambdaVersionmNZetSTT3j9AZB3nHCOwydbcwqyhJZ6OtfPgftK6E"
            },
            "Export": {
              "Name": "sls-aaaAcademy-dev-EditMySessionLambdaFunctionQualifiedArn"
            }
          },
          "ChangeInfoLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ChangeInfoLambdaVersionfQOrpaFzT7MDhelGx5nDM2BDPGU96eVYUi1pTwLn8"
            },
            "Export": {
              "Name": "sls-aaaAcademy-dev-ChangeInfoLambdaFunctionQualifiedArn"
            }
          },
          "SignupLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SignupLambdaVersionleODRzQzVFyZ2VWwzFR6fmcP3ELrgWzKFI7Ce8EhdA"
            },
            "Export": {
              "Name": "sls-aaaAcademy-dev-SignupLambdaFunctionQualifiedArn"
            }
          },
          "LoginLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "LoginLambdaVersionYAa6xAZ3kxjSthpADbsqAdhUWfM7695dusbVOcPnM"
            },
            "Export": {
              "Name": "sls-aaaAcademy-dev-LoginLambdaFunctionQualifiedArn"
            }
          },
          "ChangePasswordLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ChangePasswordLambdaVersionf5gWNbcxRSsiLvjnHjvmLDvKDjWFzCPZdX7HweqQ"
            },
            "Export": {
              "Name": "sls-aaaAcademy-dev-ChangePasswordLambdaFunctionQualifiedArn"
            }
          },
          "HttpApiId": {
            "Description": "Id of the HTTP API",
            "Value": {
              "Ref": "HttpApi"
            },
            "Export": {
              "Name": "sls-aaaAcademy-dev-HttpApiId"
            }
          },
          "HttpApiUrl": {
            "Description": "URL of the HTTP API",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "HttpApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  }
                ]
              ]
            },
            "Export": {
              "Name": "sls-aaaAcademy-dev-HttpApiUrl"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "plugins": [
      "serverless-webpack"
    ],
    "pluginsData": {},
    "functions": {
      "getAllSessions": {
        "handler": "functions/Session/getAllSessions.handler",
        "events": [
          {
            "httpApi": {
              "path": "/api/session",
              "method": "GET"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/api/session"
          }
        ],
        "name": "aaaAcademy-dev-getAllSessions",
        "package": {
          "artifact": ".serverless/getAllSessions.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "GetAllSessionsLambdaVersion5s8GOemxBYTQBOKa5xtbQkozlVWG9pzxYAAj38cbo"
      },
      "bookSession": {
        "handler": "functions/Session/bookSession.handler",
        "events": [
          {
            "httpApi": {
              "path": "/api/session",
              "method": "POST"
            },
            "resolvedMethod": "POST",
            "resolvedPath": "/api/session"
          }
        ],
        "name": "aaaAcademy-dev-bookSession",
        "package": {
          "artifact": ".serverless/bookSession.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "BookSessionLambdaVersionff2kEnS3f3I6h5NW8piopX0Mk8hZ5uxJuhpCQbZpwc"
      },
      "deleteSession": {
        "handler": "functions/Session/deleteSession.handler",
        "events": [
          {
            "httpApi": {
              "path": "/api/session/{sessionID}",
              "method": "DELETE"
            },
            "resolvedMethod": "DELETE",
            "resolvedPath": "/api/session/{sessionID}"
          }
        ],
        "name": "aaaAcademy-dev-deleteSession",
        "package": {
          "artifact": ".serverless/deleteSession.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "DeleteSessionLambdaVersionF8t4xNi61WETKM2feKKLsPorVPOBXCULjrRP3aZwO0"
      },
      "getMySession": {
        "handler": "functions/Session/getMySession.handler",
        "events": [
          {
            "httpApi": {
              "path": "/api/session/{sessionID}",
              "method": "GET"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/api/session/{sessionID}"
          }
        ],
        "name": "aaaAcademy-dev-getMySession",
        "package": {
          "artifact": ".serverless/getMySession.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "GetMySessionLambdaVersionXa9WCFuvOFCrDlAl7tFJeLCIbszFnjUvQji1UqLCiwM"
      },
      "editMySession": {
        "handler": "functions/Session/editMySession.handler",
        "events": [
          {
            "httpApi": {
              "path": "/api/session/{sessionID}",
              "method": "POST"
            },
            "resolvedMethod": "POST",
            "resolvedPath": "/api/session/{sessionID}"
          }
        ],
        "name": "aaaAcademy-dev-editMySession",
        "package": {
          "artifact": ".serverless/editMySession.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "EditMySessionLambdaVersionmNZetSTT3j9AZB3nHCOwydbcwqyhJZ6OtfPgftK6E"
      },
      "signup": {
        "handler": "functions/User/signup.handler",
        "events": [
          {
            "httpApi": {
              "path": "/api/auth/signup",
              "method": "POST"
            },
            "resolvedMethod": "POST",
            "resolvedPath": "/api/auth/signup"
          }
        ],
        "name": "aaaAcademy-dev-signup",
        "package": {
          "artifact": ".serverless/signup.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "SignupLambdaVersionleODRzQzVFyZ2VWwzFR6fmcP3ELrgWzKFI7Ce8EhdA"
      },
      "login": {
        "handler": "functions/User/login.handler",
        "events": [
          {
            "httpApi": {
              "path": "/api/auth/login",
              "method": "POST"
            },
            "resolvedMethod": "POST",
            "resolvedPath": "/api/auth/login"
          }
        ],
        "name": "aaaAcademy-dev-login",
        "package": {
          "artifact": ".serverless/login.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "LoginLambdaVersionYAa6xAZ3kxjSthpADbsqAdhUWfM7695dusbVOcPnM"
      },
      "changePassword": {
        "handler": "functions/User/changePass.handler",
        "events": [
          {
            "httpApi": {
              "path": "/api/auth/changePassword",
              "method": "POST"
            },
            "resolvedMethod": "POST",
            "resolvedPath": "/api/auth/changePassword"
          }
        ],
        "name": "aaaAcademy-dev-changePassword",
        "package": {
          "artifact": ".serverless/changePassword.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "ChangePasswordLambdaVersionf5gWNbcxRSsiLvjnHjvmLDvKDjWFzCPZdX7HweqQ"
      },
      "changeInfo": {
        "handler": "functions/User/changeInfo.handler",
        "events": [
          {
            "httpApi": {
              "path": "/api/auth/changeInfo",
              "method": "POST"
            },
            "resolvedMethod": "POST",
            "resolvedPath": "/api/auth/changeInfo"
          }
        ],
        "name": "aaaAcademy-dev-changeInfo",
        "package": {
          "artifact": ".serverless/changeInfo.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "ChangeInfoLambdaVersionfQOrpaFzT7MDhelGx5nDM2BDPGU96eVYUi1pTwLn8"
      }
    },
    "resources": {
      "Resources": {
        "quiztopiaDB": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "bookingDB",
            "AttributeDefinitions": [
              {
                "AttributeName": "sessionID",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "sessionID",
                "KeyType": "HASH"
              }
            ],
            "BillingMode": "PAY_PER_REQUEST"
          }
        },
        "userDB": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "academyUserDB",
            "AttributeDefinitions": [
              {
                "AttributeName": "PK",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "PK",
                "KeyType": "HASH"
              }
            ],
            "BillingMode": "PAY_PER_REQUEST"
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "aaaAcademy",
      "frameworkVersion": "3",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "package": {
        "individually": true,
        "artifactsS3KeyDirname": "serverless/aaaAcademy/dev/code-artifacts",
        "artifactDirectoryName": "serverless/aaaAcademy/dev/1709475647006-2024-03-03T14:20:47.006Z"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false
  },
  "package": {
    "individually": true,
    "artifactDirectoryName": "serverless/aaaAcademy/dev/1709475647006-2024-03-03T14:20:47.006Z",
    "artifact": ""
  }
}